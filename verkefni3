#pragma config(Sensor, in1,    Gyro,           sensorGyro)
#pragma config(Sensor, in2,    Light,          sensorReflection)
#pragma config(Sensor, in3,    TapSensor,      sensorAnalog)
#pragma config(Sensor, in4,    Potent,         sensorPotentiometer)
#pragma config(Sensor, in5,    LinerRight,     sensorLineFollower)
#pragma config(Sensor, in6,    LineMid,        sensorLineFollower)
#pragma config(Sensor, in7,    LineLeft,       sensorLineFollower)
#pragma config(Sensor, dgtl1,  encoRS,         sensorRotation)
#pragma config(Sensor, dgtl2,  encoRS2,        sensorRotation)
#pragma config(Sensor, dgtl7,  encoRS,         sensorRotation)
#pragma config(Sensor, dgtl8,  encoRS2,        sensorRotation)
#pragma config(Sensor, dgtl9,  encoLS,         sensorRotation)
#pragma config(Sensor, dgtl10, encoLS2,        sensorRotation)
#pragma config(Sensor, dgtl11, SonarIN,        sensorSONAR_cm)
#pragma config(Motor,  port1,           rightMotor,    tmotorVex393, openLoop)
#pragma config(Motor,  port2,           Claw,          tmotorVex393, openLoop)
#pragma config(Motor,  port9,           Arm,           tmotorVex269, openLoop)
#pragma config(Motor,  port10,          leftMotor,     tmotorVex393, openLoop, reversed)
//*!!Code automatically generated by 'ROBOTC' configuration wizard               !!*//
/*----------------------------------------------------------------------------------------------------*\
|*                                    - light and sonar sensors -                                     *|
|*                                      ROBOTC on VEX 2.0 Cortex                                      *|
|*   nota sónar og ljós til að skynja hvert robotinn getur farið    *|
|*   ef hann skynjar eitthvað fyrir framan sig þá beygjir hann og ef það er myrkur þá stoppar hann algjörlega                                *|

\*----------------------------------------------------------------------------------------------------*/

#include "..\include\header\movingForwardHeder.h"
#include "..\include\functions\myfunctions.c"


task main()
{
	StartTask(emergency_stop);
	StartTask(startBot);
	while(true)
	{
		if (vexRT[Btn7L] == 1){
			while(true){
				if(SensorValue(LightSensor) < 900){
					if(SensorValue(SonarCM) > 30 || SensorValue(SonarCM) == -1)		// Loop while robot's Ultrasonic sensor is further than 20 inches away from an object
					{                                                                         // || (or) it is '-1'.  (-1 is the value returned when nothing is in it's visable range)
						motor[RMotor] = 63;			// Motor on port2 is run at half (63) power forward
						motor[LMotor]  = 63;			// Motor on port3 is run at half (63) power forward
					}

					else if(SensorValue(SonarCM) < 30)
					{
						stopMotors();
						motor[RMotor] = 63;
						motor[LMotor] = -63;
						wait1Msec(1000);
					}
				}
				else{
					motor[RMotor] = 0;
					motor[LMotor] = 0;
				}
			}
		}
	}
}

task emergencys_stop(){
	while(true){
		if (SensorValue(FruntButton) == 1 || vexRT[Btn7D] == 1){
			suspendTask(main);
			stopMotors();
		}
	}
}
